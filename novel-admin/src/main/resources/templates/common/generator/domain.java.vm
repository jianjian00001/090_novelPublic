package ${package}.domain;

import java.io.Serializable;


import java.math.BigDecimal;

import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.java2nb.common.jsonserializer.LongToStringSerializer;


import org.springframework.format.annotation.DateTimeFormat;
import java.util.Date;



/**
 * ${comments}
 * 
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */
public class ${className}DO implements Serializable {
	private static final long serialVersionUID = 1L;

	
#foreach ($column in $columns)
	//$column.columnComment
	#if($column.javaType == "Long")
	//java中的long能表示的范围比js中number大,也就意味着部分数值在js中存不下(变成不准确的值)
	//所以通过序列化成字符串来解决
	@JsonSerialize(using = LongToStringSerializer.class)
	#end
	#if($column.javaType == "Date")
	@DateTimeFormat(pattern = "yyyy-MM-dd HH:mm:ss")
	#end
	private $column.javaType $column.attrname;
#end

#foreach ($column in $columns)
	/**
	 * 设置：${column.columnComment}
	 */
	public void set${column.attrName}($column.javaType $column.attrname) {
		this.$column.attrname = $column.attrname;
	}
	/**
	 * 获取：${column.columnComment}
	 */
	public $column.javaType get${column.attrName}() {
		return $column.attrname;
	}
#end
}
